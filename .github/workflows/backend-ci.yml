name: Backend Tests

on:
  push:
    branches: [ main, develop ]
    paths: [ 'backend/**' ]
  pull_request:
    branches: [ main, develop ]
    paths: [ 'backend/**' ]

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    strategy:
      matrix:
        php-version: ['8.4']
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: test_db
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-version }}
        extensions: mbstring, xml, pdo, pdo_mysql, dom, json
        coverage: xdebug

    - name: Install dependencies
      working-directory: backend/api
      run: |
        rm -f composer.lock
        composer install --no-interaction --prefer-dist

    - name: Setup database
      run: |
        mysql -h127.0.0.1 -uroot -proot -e "CREATE DATABASE IF NOT EXISTS test_db;"
        mysql -h127.0.0.1 -uroot -proot test_db < backend/uchl.sql

    - name: Run tests
      working-directory: backend/api
      run: |
        # Run tests without coverage first to isolate issues
        php vendor/bin/phpunit tests/ --no-coverage

    - name: Run tests with coverage
      working-directory: backend/api
      run: |
        php vendor/bin/phpunit tests/ --coverage-text --coverage-clover=coverage.xml

    - name: Upload coverage
      uses: codecov/codecov-action@v3
      with:
        file: backend/api/coverage.xml
        fail_ci_if_error: false

  security:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    
    steps:
    - uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.4'

    - name: Install dependencies
      working-directory: backend/api
      run: composer install --no-interaction --prefer-dist --no-dev

    - name: Security audit
      working-directory: backend/api
      run: composer audit