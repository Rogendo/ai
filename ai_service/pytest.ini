[tool:pytest]
# Pytest configuration for AI Pipeline
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Async test support
asyncio_mode = auto
asyncio_default_fixture_loop_scope = function

# Output options
addopts = 
    -v
    --tb=short
    --strict-markers
    --strict-config
    --cov=app
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml:coverage.xml
    --cov-branch
    --cov-fail-under=70

# Markers for test categorization
markers =
    unit: Unit tests
    integration: Integration tests
    slow: Slow tests
    benchmark: Performance benchmark tests
    model: Model-specific tests
    streaming: Streaming component tests
    api: API endpoint tests

# Minimum version requirements
minversion = 6.0

# Warnings configuration
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning:librosa*
    ignore::UserWarning:whisper*

# Coverage configuration
[coverage:run]
source = app
omit = 
    */tests/*
    */test_*.py
    */__init__.py
    */conftest.py
    */venv/*
    */env/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING: