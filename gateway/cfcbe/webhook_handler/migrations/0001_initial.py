# Generated by Django 5.1.6 on 2025-03-23 08:56

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Complaint",
            fields=[
                (
                    "complaint_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                (
                    "session_id",
                    models.UUIDField(blank=True, default=uuid.uuid4, null=True),
                ),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "reporter_nickname",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "case_category",
                    models.CharField(
                        blank=True, default="Not Specified", max_length=255, null=True
                    ),
                ),
                ("complaint_text", models.TextField(blank=True, null=True)),
                (
                    "complaint_image",
                    models.ImageField(
                        blank=True, null=True, upload_to="complaints/images/"
                    ),
                ),
                (
                    "complaint_audio",
                    models.FileField(
                        blank=True, null=True, upload_to="complaints/audio/"
                    ),
                ),
                (
                    "complaint_video",
                    models.FileField(
                        blank=True, null=True, upload_to="complaints/videos/"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "message_id_ref",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Conversation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("conversation_id", models.CharField(max_length=255, unique=True)),
                ("sender_id", models.CharField(max_length=255)),
                ("platform", models.CharField(max_length=50)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "last_activity",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("metadata", models.JSONField(blank=True, default=dict)),
            ],
        ),
        migrations.CreateModel(
            name="Organization",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, unique=True)),
                ("email", models.EmailField(max_length=254, unique=True)),
                ("phone", models.CharField(blank=True, max_length=20, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="Person",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("age", models.PositiveIntegerField(blank=True, null=True)),
                ("gender", models.CharField(blank=True, max_length=50, null=True)),
                ("additional_info", models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="WhatsAppMedia",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "media_type",
                    models.CharField(
                        choices=[
                            ("image", "Image"),
                            ("video", "Video"),
                            ("audio", "Audio"),
                            ("document", "Document"),
                        ],
                        help_text="Type of the media file",
                        max_length=50,
                    ),
                ),
                (
                    "media_url",
                    models.URLField(
                        blank=True,
                        help_text="URL of the media file, if applicable",
                        null=True,
                    ),
                ),
                (
                    "media_file",
                    models.FileField(
                        blank=True,
                        help_text="Uploaded media file",
                        null=True,
                        upload_to="whatsapp_media/",
                    ),
                ),
                (
                    "media_mime_type",
                    models.CharField(
                        blank=True,
                        help_text="MIME type of the media file",
                        max_length=100,
                        null=True,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CaseNote",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("note_text", models.TextField()),
                ("note_audio", models.BinaryField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("created_by", models.CharField(max_length=255)),
                (
                    "complaint",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="case_notes",
                        to="webhook_handler.complaint",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ComplaintStatus",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("status", models.CharField(max_length=100)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("updated_by", models.CharField(max_length=255)),
                (
                    "complaint",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="webhook_handler.complaint",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Contact",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("wa_id", models.CharField(max_length=15, unique=True)),
                ("name", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "display_phone_number",
                    models.CharField(blank=True, max_length=15, null=True),
                ),
                (
                    "conversation",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="contacts",
                        to="webhook_handler.conversation",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="complaint",
            name="conversation",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="complaints",
                to="webhook_handler.conversation",
            ),
        ),
        migrations.CreateModel(
            name="Notification",
            fields=[
                (
                    "notification_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("message", models.TextField()),
                ("is_read", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "complaint",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notifications",
                        to="webhook_handler.complaint",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="complaint",
            name="perpetrator",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="perpetrators",
                to="webhook_handler.person",
            ),
        ),
        migrations.AddField(
            model_name="complaint",
            name="victim",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="victims",
                to="webhook_handler.person",
            ),
        ),
        migrations.CreateModel(
            name="Voicenote",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("voicenote", models.BinaryField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "complaint",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="voicenotes",
                        to="webhook_handler.complaint",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="WebhookMessage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("message_id", models.CharField(max_length=255, unique=True)),
                ("sender_id", models.CharField(max_length=255)),
                ("platform", models.CharField(max_length=50)),
                ("content", models.TextField(blank=True)),
                ("media_url", models.URLField(blank=True, null=True)),
                ("message_type", models.CharField(default="text", max_length=50)),
                ("timestamp", models.DateTimeField(default=django.utils.timezone.now)),
                ("metadata", models.JSONField(blank=True, default=dict)),
                (
                    "conversation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="messages",
                        to="webhook_handler.conversation",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="WhatsAppCredential",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("client_id", models.CharField(max_length=255)),
                ("client_secret", models.TextField()),
                ("business_id", models.CharField(max_length=255)),
                ("phone_number_id", models.CharField(max_length=255)),
                ("access_token", models.TextField()),
                ("token_expiry", models.DateTimeField(null=True)),
                (
                    "organization",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="webhook_handler.organization",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="WhatsAppMessage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("sender", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "message_type",
                    models.CharField(
                        choices=[
                            ("text", "Text"),
                            ("image", "Image"),
                            ("video", "Video"),
                            ("audio", "Audio"),
                            ("document", "Document"),
                            ("sticker", "Sticker"),
                            ("location", "Location"),
                            ("contact", "Contact"),
                        ],
                        default="text",
                        help_text="Type of the message",
                        max_length=50,
                    ),
                ),
                (
                    "content",
                    models.TextField(
                        blank=True,
                        help_text="Text content of the message, if applicable",
                        null=True,
                    ),
                ),
                (
                    "caption",
                    models.TextField(
                        blank=True,
                        help_text="Caption for media messages, if applicable",
                        null=True,
                    ),
                ),
                (
                    "timestamp",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Timestamp of when the message was sent/received",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("sent", "Sent"),
                            ("failed", "Failed"),
                            ("delivered", "Delivered"),
                            ("read", "Read"),
                        ],
                        default="pending",
                        help_text="Current status of the message",
                        max_length=20,
                    ),
                ),
                (
                    "is_forwarded_to_main_system",
                    models.BooleanField(
                        default=False,
                        help_text="Flag to track if the message was forwarded to the main system",
                    ),
                ),
                (
                    "conversation",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="whatsapp_messages",
                        to="webhook_handler.conversation",
                    ),
                ),
                (
                    "media",
                    models.ForeignKey(
                        blank=True,
                        help_text="Linked media file",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="webhook_handler.whatsappmedia",
                    ),
                ),
                (
                    "recipient",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="received_messages",
                        to="webhook_handler.contact",
                    ),
                ),
                (
                    "webhook_message",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="whatsapp_message",
                        to="webhook_handler.webhookmessage",
                    ),
                ),
            ],
            options={
                "ordering": ["-timestamp"],
            },
        ),
        migrations.CreateModel(
            name="WhatsAppResponse",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("content", models.TextField()),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "message",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="responses",
                        to="webhook_handler.whatsappmessage",
                    ),
                ),
                (
                    "webhook_message",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="whatsapp_response",
                        to="webhook_handler.webhookmessage",
                    ),
                ),
            ],
            options={
                "ordering": ["-timestamp"],
            },
        ),
    ]
